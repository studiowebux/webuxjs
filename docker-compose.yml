version: "2.1"
services:
  backend:
    build: ./backend
    environment:
      - NODE_ENV=production
      - CLUSTERIZE=true
      - CORES=4
      - PORT=3030
      - DB_URL=@mongodb-primary:27017/framework
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_LOCAL=false
      - DB_DEBUG=false
      - DB_REPSET=replicaset
      - APP_ID=Demo01
      - COOKIE_SECRET="Shut don't talk about that secret!"
      - ORIGIN=http://127.0.0.1 http://localhost https://localhost https://127.0.0.1
      - CONSOLE=true
      - LOGSTASH_URL=logstash
    ports:
      - "3030"
    volumes:
      - "./app/logs:/usr/src/app/log"
      - "./app/defaults:/usr/src/app/defaults"
      - "./app/uploads:/usr/src/app/uploads"
      - "./app/locales:/usr/src/app/locales"
    restart: always
    links:
      - mongodb-primary
      - logstash
    depends_on:
      mongodb-primary:
        condition: service_healthy
      mongodb-secondary:
        condition: service_healthy
      logstash:
        condition: service_started
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-k",
          "-H",
          "Origin: http://localhost",
          "http://localhost:3030/api/v1/healthcheck",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  fix-mongodb-permissions:
    image: "bitnami/mongodb:latest"
    user: root
    command: chown -R 1001:1001 /bitnami
    volumes:
      - ./app/mongo_data:/bitnami

  # Default ReplicaSet Name : replicaset
  mongodb-primary:
    image: "bitnami/mongodb:latest"
    environment:
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_USERNAME=user
      - MONGODB_PASSWORD=password
      - MONGODB_DATABASE=framework
      - MONGODB_SYSTEM_LOG_VERBOSITY=1
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
    volumes:
      - "./app/mongo_data:/bitnami"
    healthcheck:
      test:
        [
          "CMD",
          "echo",
          "db.runCommand('ping').ok",
          "| mongo localhost:27017/framework --quiet",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb-secondary:
    image: "bitnami/mongodb:latest"
    depends_on:
      mongodb-primary:
        condition: service_healthy
    environment:
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_SYSTEM_LOG_VERBOSITY=1
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
    healthcheck:
      test:
        [
          "CMD",
          "echo",
          "db.runCommand('ping').ok",
          "| mongo localhost:27017/framework --quiet",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb-arbiter:
    image: "bitnami/mongodb:latest"
    depends_on:
      mongodb-primary:
        condition: service_healthy
    environment:
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_PRIMARY_HOST=mongodb-primary
      - MONGODB_PRIMARY_PORT_NUMBER=27017
      - MONGODB_PRIMARY_ROOT_PASSWORD=password123
      - MONGODB_REPLICA_SET_KEY=replicasetkey123
      - MONGODB_SYSTEM_LOG_VERBOSITY=1
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
    healthcheck:
      test:
        [
          "CMD",
          "echo",
          "db.runCommand('ping').ok",
          "| mongo localhost:27017/framework --quiet",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  fix_elasticsearch_permissions:
    user: root
    image: alpine
    command: mkdir -p /usr/share/elasticsearch/data && chown -R 1000:1000 /usr/share/elasticsearch/data
    volumes:
      - ./app/elk/elasticsearch/data:/usr/share/elasticsearch/data

  elasticsearch:
    build:
      context: ./ELK/elasticsearch/
      args:
        ELK_VERSION: 6.4.2
    volumes:
      - ./app/elk/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"

  logstash:
    build:
      context: ./ELK/logstash/
      args:
        ELK_VERSION: 6.4.2
    ports:
      - "5000:5000"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: ./ELK/kibana/
      args:
        ELK_VERSION: 6.4.2
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  app:
    build:
      context: ./frontend
    environment:
      - URL=http://localhost/api/v1
      - NODE_ENV=production
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./app/nginx/logs/:/var/log/nginx/"
    restart: always
    expose:
      - "80"
      - "443"
    links:
      - backend
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "80"]
      interval: 60s
      timeout: 10s
      retries: 5
